[{"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/index.js":"1","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/App.js":"2","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/home/index.js":"3","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/store.js":"4","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/reducers/index.js":"5","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/actions/index.js":"6","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/actions/postsAction.js":"7","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/reducers/postsReducer.js":"8","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/api/index.js":"9","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/post/PostList.js":"10","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/post/Post.js":"11","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/selectors/postsSelector.js":"12","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/reducers/commentsReducer.js":"13","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/comments/CommentList.js":"14","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/comments/Comment.js":"15","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/actions/commentsAction.js":"16","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/selectors/commentsSelector.js":"17","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/comments/PostComment.js":"18","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/actions/authAction.js":"19","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/reducers/authReducer.js":"20","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/login/GmailLogin.js":"21","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/navBar/index.js":"22","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/selectors/authSelector.js":"23","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/helpers/dateHelper.js":"24"},{"size":267,"mtime":1609092556492,"results":"25","hashOfConfig":"26"},{"size":1346,"mtime":1609767472052,"results":"27","hashOfConfig":"26"},{"size":1117,"mtime":1609712176767,"results":"28","hashOfConfig":"26"},{"size":275,"mtime":1609257188256,"results":"29","hashOfConfig":"26"},{"size":246,"mtime":1609605867500,"results":"30","hashOfConfig":"26"},{"size":92,"mtime":1609598445780,"results":"31","hashOfConfig":"26"},{"size":945,"mtime":1609700241713,"results":"32","hashOfConfig":"26"},{"size":383,"mtime":1609281387856,"results":"33","hashOfConfig":"26"},{"size":186,"mtime":1609765800951,"results":"34","hashOfConfig":"26"},{"size":1121,"mtime":1609767134207,"results":"35","hashOfConfig":"26"},{"size":2832,"mtime":1609764445672,"results":"36","hashOfConfig":"26"},{"size":139,"mtime":1609415959437,"results":"37","hashOfConfig":"26"},{"size":473,"mtime":1609415241366,"results":"38","hashOfConfig":"26"},{"size":409,"mtime":1609711158234,"results":"39","hashOfConfig":"26"},{"size":2344,"mtime":1609764445671,"results":"40","hashOfConfig":"26"},{"size":871,"mtime":1609697745436,"results":"41","hashOfConfig":"26"},{"size":1200,"mtime":1609588294551,"results":"42","hashOfConfig":"26"},{"size":1433,"mtime":1609764445672,"results":"43","hashOfConfig":"26"},{"size":256,"mtime":1609597288831,"results":"44","hashOfConfig":"26"},{"size":498,"mtime":1609597376991,"results":"45","hashOfConfig":"26"},{"size":1610,"mtime":1609686868312,"results":"46","hashOfConfig":"26"},{"size":2011,"mtime":1609766594266,"results":"47","hashOfConfig":"26"},{"size":64,"mtime":1609686046570,"results":"48","hashOfConfig":"26"},{"size":105,"mtime":1609764445673,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"6y0pia",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/index.js",[],["105","106"],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/App.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/home/index.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/store.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/reducers/index.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/actions/index.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/actions/postsAction.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/reducers/postsReducer.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/api/index.js",[],["107","108"],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/post/PostList.js",["109"],"\nimport {Link} from 'react-router-dom'\nimport {dateFormat} from \"../../helpers/dateHelper\"\nimport \"./Post.scss\"\n\nconst PostList = (props) => {\n\n    const posts = Object.keys(props.posts).map(key => props.posts[key]);\n    const listItems = posts.sort((a,b)=>new Date(b.publish_date) -  new Date(a.publish_date)).\n                      map(post => {\n                          return (\n                          <div key={post.id} className=\"column is-half is-narrow\">\n                              <div className=\"content\">\n                              <h3 className=\"title\"><Link \n                                to={`${process.env.PUBLIC_URL}/${encodeURIComponent(post.title.split(\" \").join(\"-\").concat(\"-\").concat(post.id))}`}\n                                  >{post.title}</Link></h3>\n                              <h6 className=\"subtitle has-text-grey mb-2\">by {post.author} - {dateFormat(post.publish_date)}</h6>\n                              <p>{post.description}</p>\n                              </div>\n                          </div>)\n                      })\n\n    return listItems;\n}\n\nexport default PostList\n","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/post/Post.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/selectors/postsSelector.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/reducers/commentsReducer.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/comments/CommentList.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/comments/Comment.js",["110","111","112","113","114","115","116"],"\nimport React from 'react';\n\nimport PostComment from './PostComment';\nimport {dateFormat } from '../../helpers/dateHelper';\n\n\nclass Comment extends React.Component  {\n\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        showNestedComments : false,\n        showPostComment : false\n    }\n    toggleNestedComments = () => {\n        this.setState(prevState => ({showNestedComments: !prevState.showNestedComments }));\n    }\n    showPostComment = () => {\n        this.setState(prevState => ({showPostComment: !prevState.showPostComment,showNestedComments: true }));\n    }\n   \n     render() { \n        const {comment,allComments} = this.props;\n         const children = allComments.filter(comment => comment.parent_id===this.props.comment.id)|| [];\n     console.log(children);\n    // const children = comment.children || [];\n    const nestedComments = children.map(comment => {\n       return <Comment isSignedIn={this.props.isSignedIn} auth={this.props.auth} submitComment = {this.props.submitComment}  key={comment.id}  comment= {comment} allComments={allComments}/>\n    });\n    const commentDate = new Date(comment.date);\n    const format = commentDate.getDate()+\"/\"+(commentDate.getMonth()+1)+\"/\"+(commentDate.getFullYear());\n    let buttonText = \"Show Replies\";\n    return (\n       \n        <article  className=\"media\">\n            <figure className=\"media-left\">\n    <p className=\"image is-64x64\">\n      <img src=\"https://bulma.io/images/placeholders/128x128.png\"/>\n    </p>\n  </figure>\n            <div className=\"media-content\">\n    <div className=\"content\">\n      <p>\n    <strong>{comment.user}  </strong>   -   <small>  {dateFormat(comment.date)}</small>\n        <br/>\n        {comment.content}\n        <br/>\n     <small> {this.props.isSignedIn && <><a>Like</a> · <a onClick={this.showPostComment}>{this.state.showPostComment ? \"Cancel\": \"Reply\"} </a> </>}\n    {children.length>0 && <a onClick={this.toggleNestedComments}>{this.props.isSignedIn?\". \":\"\"}{children.length} {children.length===1?\"reply\": \"replies\"} </a> }\n        </small>\n      </p>\n    </div>\n        {this.state.showPostComment && <PostComment parentId={this.props.comment.id} submitComment={this.props.submitComment}/>}\n        {this.state.showNestedComments && nestedComments}\n    </div>\n        </article>\n        \n    )}\n}\n\n\nexport default Comment;","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/actions/commentsAction.js",["117"],"import axios from \"axios\"\nimport api from \"../../api\"\n\n\nconst addComment = (id,comment) => {\n    return {\n        type : \"ADD_COMMENT\",\n        payload : {\n            id,\n            comment\n        }\n    }\n}\nconst fetchComments = (id,comments) => {\n    return {\n        type : \"FETCH_COMMENTS\",\n        payload : {\n            id,\n            comments\n        }\n    }\n}\nexport const loadComments = (id) => async dispatch => {\n    const res = await api.get(`posts/${id}/comments`);\n    dispatch(fetchComments(id,res.data));\n}\nexport const postComment = (id,comment) => async dispatch =>{\n\n    const  commentsRes = await api.get(`comments`);\n    const maxId = Math.max(...commentsRes.data.map(comment => comment.id));\n    comment = {id: maxId+1,...comment}\n    const res = await api.post(`posts/${id}/comments`,comment);\n   \n    dispatch(addComment(id,res.data));\n    \n\n}","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/selectors/commentsSelector.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/comments/PostComment.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/actions/authAction.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/reducers/authReducer.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/login/GmailLogin.js",["118"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../../redux/actions\";\n\n\nclass GmailLogin extends React.Component {\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n        window.gapi.client\n          .init({\n            clientId:\n              \"888650686737-99vo39cnloqmlu8vk1816d7ih6hm3ilt.apps.googleusercontent.com\",\n            scope: \"email\",\n          })\n          .then(() => {\n            this.auth = window.gapi.auth2.getAuthInstance();   \n                 \n            this.onAuthChange();\n            this.auth.isSignedIn.listen(this.onAuthChange);\n          });\n      });\n  }\n\n  handleBtnClick = () => {\n    if (this.props.isSignedIn) {\n      this.auth.signOut();\n    } else if (this.props.isSignedIn === false) {\n      this.auth.signIn();\n    }\n  };\n  onAuthChange = () => {\n    if (this.auth.isSignedIn.get()) {\n      this.props.signIn(\n        this.auth.currentUser.get().getId(),\n        this.auth.currentUser.get().getBasicProfile().getName()\n      );\n    } else if (this.auth.isSignedIn.get() === false) {\n      this.props.signOut();\n    }\n  };\n  render() {\n    return (\n   \n        <a className=\"is-medium is-google\" onClick={this.handleBtnClick}>\n          <span className=\"icon\">\n            <i className=\"fab fa-google\"></i>\n          </span>\n          <span>{this.props.isSignedIn ? \"Sign Out\" : \"Sign In\"}</span>\n        </a>\n     \n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\nexport default connect(mapStateToProps, { signIn, signOut })(GmailLogin);\n","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/components/navBar/index.js",["119"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./NavBar.scss\";\nimport logo from \"../../logo.png\";\nimport GmailLogin from \"../login/GmailLogin\";\n\nclass NavBar extends React.Component {\n  renderNavEnd = () => {\n    if (this.props.isSignedIn) {\n      return (\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <GmailLogin></GmailLogin>\n          </div>\n        </div>\n      );\n    }\n  };\n  renderNavStart = () => {\n    if (this.props.isSignedIn) {\n      return (\n        <div className=\"navbar-start\">\n          <Link to=\"/home\" className=\"navbar-item\">\n            Home\n          </Link>\n        </div>\n      );\n    }\n  };\n  render() {\n    return (\n      <nav\n        className=\"navBarCmpnt navbar is-light\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"navbar-brand\">\n          <Link to={process.env.PUBLIC_URL} className=\"navbar-item\">\n            <img src={logo} className=\"appLogo\"></img>\n          </Link>\n          <div\n            role=\"button\"\n            className=\"navbar-burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navBarItems\"\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </div>\n        </div>\n        <div id=\"navBarItems\" className=\"navbar-menu\">\n        <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n        <Link to={process.env.PUBLIC_URL} className=\"navbar-item\">\n            Home\n          </Link>\n          </div>\n          <div className=\"navbar-item\">\n            <GmailLogin></GmailLogin>\n          </div>\n        </div> \n         \n        </div>\n      </nav>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    userId: state.auth.userId,\n  };\n};\nexport default connect(mapStateToProps)(NavBar);\n","/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/redux/selectors/authSelector.js",[],"/Users/swathikunchakuri/Sites/letsgetchecked/blog-app/src/helpers/dateHelper.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":9,"column":94,"nodeType":"128","messageId":"129","endLine":9,"endColumn":95,"fix":"130"},{"ruleId":"131","severity":1,"message":"132","line":10,"column":5,"nodeType":"133","messageId":"134","endLine":12,"endColumn":6},{"ruleId":"135","severity":1,"message":"136","line":33,"column":11,"nodeType":"137","messageId":"138","endLine":33,"endColumn":17},{"ruleId":"135","severity":1,"message":"139","line":34,"column":9,"nodeType":"137","messageId":"138","endLine":34,"endColumn":19},{"ruleId":"140","severity":1,"message":"141","line":40,"column":7,"nodeType":"142","endLine":40,"endColumn":68},{"ruleId":"143","severity":1,"message":"144","line":50,"column":42,"nodeType":"142","endLine":50,"endColumn":45},{"ruleId":"143","severity":1,"message":"144","line":50,"column":56,"nodeType":"142","endLine":50,"endColumn":90},{"ruleId":"143","severity":1,"message":"144","line":51,"column":27,"nodeType":"142","endLine":51,"endColumn":66},{"ruleId":"135","severity":1,"message":"145","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":44,"column":9,"nodeType":"142","endLine":44,"endColumn":74},{"ruleId":"140","severity":1,"message":"141","line":40,"column":13,"nodeType":"142","endLine":40,"endColumn":49},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],["146"],["147"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"148","text":"149"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'format' is assigned a value but never used.","Identifier","unusedVar","'buttonText' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",[310,334],"\n                      ."]